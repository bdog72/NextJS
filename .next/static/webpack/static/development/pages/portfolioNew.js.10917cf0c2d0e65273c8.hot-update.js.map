{"version":3,"file":"static/webpack/static/development/pages/portfolioNew.js.10917cf0c2d0e65273c8.hot-update.js","sources":["webpack:///./components/portfolios/PortfolioCreateForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\n\nconst PortfolioCreateForm = () => (\n  <div>\n    <h1>Anywhere in your app!</h1>\n    <Formik\n      initialValues={{ email: 'bozo', password: '' }}\n      validate={values => {\n        let errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n          />\n          {errors.email && touched.email && errors.email}\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n          />\n          {errors.password && touched.password && errors.password}\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </form>\n      )}\n    </Formik>\n  </div>\n);\n\nexport default PortfolioCreateForm;\n\n// import React from 'react';\n\n// class PortfolioCreateForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { title: '', description: '', language: '' };\n\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n//   handleChange(event) {\n//     const field = event.target.name;\n//     this.setState({ [field]: event.target.value });\n//   }\n\n//   handleSubmit(event) {\n//     alert(\n//       'A name was submitted: ' +\n//         this.state.title +\n//         ' ' +\n//         this.state.description +\n//         ' ' +\n//         this.state.language\n//     );\n//     event.preventDefault();\n//   }\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <label>\n//           Name:\n//           <input\n//             name=\"title\"\n//             type=\"text\"\n//             value={this.state.value}\n//             onChange={this.handleChange}\n//           />\n//         </label>\n//         <label>\n//           Description:\n//           <textarea\n//             name=\"description\"\n//             type=\"text\"\n//             value={this.state.description}\n//             onChange={this.handleChange}\n//           />\n//         </label>\n//         <label>\n//           Pick your favorite programming language:\n//           <select\n//             name=\"language\"\n//             value={this.state.language}\n//             onChange={this.handleChange}\n//           >\n//             <option value=\"Javascript\">Javascript</option>\n//             <option value=\"Java\">Java</option>\n//             <option value=\"C++\">C++</option>\n//             <option value=\"C#\">C#</option>\n//           </select>\n//         </label>\n//         <input type=\"submit\" value=\"Submit\" />\n//       </form>\n//     );\n//   }\n// }\n// export default PortfolioCreateForm;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AA3BA;AAvBA;AACA;AA0DA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}